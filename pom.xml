<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.daggerok.alibaba</groupId>
  <artifactId>alibaba-example</artifactId>
  <version>1.0.1</version>
  <packaging>pom</packaging>

  <properties>
    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
  </properties>

  <modules>
    <module>sentinel-dashboard</module>
    <module>spring-boot-parent</module>
    <module>my-app</module>
  </modules>

  <scm>
    <url>https://github.com/daggerok/alibaba-example</url>
    <connection>scm:git:https://github.com/daggerok/alibaba-example.git</connection>
    <tag>v1.0.1</tag>
  </scm>

  <build>
    <defaultGoal>clean package</defaultGoal>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <!-- releaseProfiles configuration will actually force a Maven profile
            – the `releases` profile – to become active during the Release process. -->
          <goals>install</goals><!-- just don't deploy... -->
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
